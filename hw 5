#include <iostream>
#include <fstream>
#include <vector>
#include <string>

using namespace std;

class ToDoList {
public:
    ToDoList(const string& filename) : filename(filename) {}

    void addTask(const string& task) {
        ofstream file(filename, ios::app);
        if (file.is_open()) {
            file << task << "\n";
            file.close();
            cout << "Task added successfully!" << endl;
        } else {
            cerr << "Error opening file!" << endl;
        }
    }

    void viewTasks() {
        ifstream file(filename);
        string task;
        int taskNumber = 1;
        if (file.is_open()) {
            cout << "To-Do List:" << endl;
            while (getline(file, task)) {
                cout << taskNumber++ << ". " << task << endl;
            }
            file.close();
        } else {
            cerr << "Error opening file!" << endl;
        }
    }

    void markTaskAsDone(int taskNumber) {
        ifstream file(filename);
        vector<string> tasks;
        string task;
        int currentTask = 1;

        if (file.is_open()) {
            while (getline(file, task)) {
                if (currentTask == taskNumber) {
                    task = "[Done] " + task;
                }
                tasks.push_back(task);
                currentTask++;
            }
            file.close();

            ofstream outFile(filename, ios::trunc);
            if (outFile.is_open()) {
                for (const auto& t : tasks) {
                    outFile << t << "\n";
                }
                outFile.close();
                cout << "Task marked as done!" << endl;
            } else {
                cerr << "Error opening file for updating!" << endl;
            }
        } else {
            cerr << "Error opening file!" << endl;
        }
    }

private:
    string filename;
};

int main() {
    ToDoList todoList("tasks.txt");
    int choice;
    int taskNumber;

    while (true) {
        cout << "\nTo-Do List Manager" << endl;
        cout << "1. Add Task" << endl;
        cout << "2. View All Tasks" << endl;
        cout << "3. Mark Task as Done" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;
        cin.ignore();

        switch (choice) {
            case 1:
                {
                    string task;
                    cout << "Enter the task: ";
                    getline(cin, task);
                    todoList.addTask(task);
                }
                break;
            case 2:
                todoList.viewTasks();
                break;
            case 3:
                cout << "Enter task number to mark as done: ";
                cin >> taskNumber;
                todoList.markTaskAsDone(taskNumber);
                break;
            case 4:
                cout << "Exiting the program." << endl;
                return 0;
            default:
                cout << "Invalid choice, try again." << endl;
        }
    }

    return 0;
}
